# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- main

resources:
- repo: self

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: '2c522f90-5292-4f25-9b5c-e173eb6167f0'
  imageRepository: 'dspaceangularaut'
  containerRegistry: 'libraryappscontainerregistry.azurecr.io'
  dockerfilePath: '$(Build.SourcesDirectory)/Dockerfile'
  docker_devfilePath: '$(Build.SourcesDirectory)/Dockerfile_dev'
  docker_stagefilePath: '$(Build.SourcesDirectory)/Dockerfile_stage'
  tag: '$(Build.BuildId)'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'
  # Variable to control the building of the dev image
  buildProdImage: false
  buildStageImage: false

stages:
- stage: Build
  displayName: Build and push stage
  jobs:
  - job: Build
    displayName: Build main image
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Docker@2
      displayName: Build and push a dev image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(docker_devfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          dev-$(tag)
- stage: BuildStage
  displayName: Build stuff
  jobs:
  - job: Build
    displayName: Build main image 2
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Docker@2
      displayName: Build and push a stage image to container registry
      condition: and(succeeded(), eq(variables['buildStageImage'], 'true'))
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(docker_stagefilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          stage-$(tag)
- stage: BuildProd
  displayName: Build stuff
  jobs:
  - job: Build
    displayName: Build main image 2
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Docker@2
      displayName: Build and push prod image to container registry
      condition: and(succeeded(), eq(variables['buildProdImage'], 'true'))
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          prod-$(tag)
